'use strict';var cov_24y4jsl27j=function(){var path='D:\\devNodejs\\platzi\\platziverse\\platziverse-db\\index.js',hash='4dd9255c7820d517f750f5ff148af403122255b3',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'D:\\devNodejs\\platzi\\platziverse\\platziverse-db\\index.js',statementMap:{'0':{start:{line:3,column:22},end:{line:3,column:41}},'1':{start:{line:4,column:24},end:{line:4,column:49}},'2':{start:{line:5,column:25},end:{line:5,column:51}},'3':{start:{line:6,column:17},end:{line:6,column:36}},'4':{start:{line:8,column:0},end:{line:41,column:1}},'5':{start:{line:9,column:2},end:{line:19,column:4}},'6':{start:{line:21,column:20},end:{line:21,column:41}},'7':{start:{line:22,column:21},end:{line:22,column:44}},'8':{start:{line:23,column:22},end:{line:23,column:46}},'9':{start:{line:25,column:2},end:{line:25,column:33}},'10':{start:{line:26,column:2},end:{line:26,column:35}},'11':{start:{line:28,column:2},end:{line:28,column:32}},'12':{start:{line:30,column:2},end:{line:32,column:3}},'13':{start:{line:31,column:4},end:{line:31,column:41}},'14':{start:{line:34,column:16},end:{line:34,column:18}},'15':{start:{line:35,column:17},end:{line:35,column:19}},'16':{start:{line:37,column:2},end:{line:40,column:3}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:8,column:17},end:{line:8,column:18}},loc:{start:{line:8,column:41},end:{line:41,column:1}},line:8}},branchMap:{'0':{loc:{start:{line:30,column:2},end:{line:32,column:3}},type:'if',locations:[{start:{line:30,column:2},end:{line:32,column:3}},{start:{line:30,column:2},end:{line:32,column:3}}],line:30}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0},f:{'0':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const setupDatabase=(cov_24y4jsl27j.s[0]++,require('./lib/db'));const setupAgentModel=(cov_24y4jsl27j.s[1]++,require('./models/agent'));const setupMetricModel=(cov_24y4jsl27j.s[2]++,require('./models/metric'));const defaults=(cov_24y4jsl27j.s[3]++,require('defaults'));cov_24y4jsl27j.s[4]++;module.exports=async function(config){cov_24y4jsl27j.f[0]++;cov_24y4jsl27j.s[5]++;config=defaults(config,{dialect:'sqlite',pool:{max:10,min:0,idle:10000},query:{raw:true}});const sequelize=(cov_24y4jsl27j.s[6]++,setupDatabase(config));const AgentModel=(cov_24y4jsl27j.s[7]++,setupAgentModel(config));const MetricModel=(cov_24y4jsl27j.s[8]++,setupMetricModel(config));cov_24y4jsl27j.s[9]++;AgentModel.hasMany(MetricModel);cov_24y4jsl27j.s[10]++;MetricModel.belongsTo(AgentModel);cov_24y4jsl27j.s[11]++;await sequelize.authenticate();cov_24y4jsl27j.s[12]++;if(config.setup){cov_24y4jsl27j.b[0][0]++;cov_24y4jsl27j.s[13]++;await sequelize.sync({force:true});}else{cov_24y4jsl27j.b[0][1]++;}const Agent=(cov_24y4jsl27j.s[14]++,{});const Metric=(cov_24y4jsl27j.s[15]++,{});cov_24y4jsl27j.s[16]++;return{Agent,Metric};};