'use strict';var cov_2jpbhrppgb=function(){var path='D:\\devNodejs\\platzi\\platziverse\\platziverse-db\\tests\\metric-tests.js',hash='4aa872e9a00d4160ff6fd1f271718d00b2dd47fc',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'D:\\devNodejs\\platzi\\platziverse\\platziverse-db\\tests\\metric-tests.js',statementMap:{'0':{start:{line:3,column:30},end:{line:3,column:5630}},'1':{start:{line:4,column:27},end:{line:4,column:486}},'2':{start:{line:4,column:74},end:{line:4,column:93}},'3':{start:{line:4,column:96},end:{line:4,column:236}},'4':{start:{line:4,column:166},end:{line:4,column:219}},'5':{start:{line:4,column:220},end:{line:4,column:233}},'6':{start:{line:4,column:237},end:{line:4,column:454}},'7':{start:{line:4,column:328},end:{line:4,column:341}},'8':{start:{line:4,column:343},end:{line:4,column:362}},'9':{start:{line:4,column:363},end:{line:4,column:451}},'10':{start:{line:4,column:455},end:{line:4,column:482}},'11':{start:{line:6,column:13},end:{line:6,column:27}},'12':{start:{line:7,column:14},end:{line:7,column:30}},'13':{start:{line:8,column:19},end:{line:8,column:40}},'14':{start:{line:10,column:23},end:{line:10,column:51}},'15':{start:{line:11,column:22},end:{line:11,column:49}},'16':{start:{line:13,column:13},end:{line:15,column:1}},'17':{start:{line:17,column:16},end:{line:19,column:1}},'18':{start:{line:21,column:11},end:{line:21,column:24}},'19':{start:{line:22,column:11},end:{line:22,column:16}},'20':{start:{line:23,column:14},end:{line:23,column:18}},'21':{start:{line:24,column:17},end:{line:24,column:21}},'22':{start:{line:25,column:9},end:{line:25,column:13}},'23':{start:{line:27,column:15},end:{line:27,column:34}},'24':{start:{line:29,column:16},end:{line:34,column:1}},'25':{start:{line:36,column:20},end:{line:47,column:1}},'26':{start:{line:49,column:24},end:{line:64,column:1}},'27':{start:{line:66,column:0},end:{line:94,column:3}},'28':{start:{line:67,column:2},end:{line:67,column:35}},'29':{start:{line:68,column:2},end:{line:72,column:4}},'30':{start:{line:72,column:4},end:{line:72,column:39}},'31':{start:{line:73,column:2},end:{line:73,column:92}},'32':{start:{line:76,column:2},end:{line:76,column:37}},'33':{start:{line:77,column:2},end:{line:81,column:6}},'34':{start:{line:79,column:6},end:{line:79,column:23}},'35':{start:{line:84,column:2},end:{line:84,column:38}},'36':{start:{line:85,column:2},end:{line:85,column:77}},'37':{start:{line:86,column:2},end:{line:86,column:108}},'38':{start:{line:87,column:2},end:{line:87,column:122}},'39':{start:{line:89,column:24},end:{line:92,column:4}},'40':{start:{line:90,column:28},end:{line:90,column:37}},'41':{start:{line:91,column:29},end:{line:91,column:39}},'42':{start:{line:93,column:2},end:{line:93,column:35}},'43':{start:{line:96,column:0},end:{line:98,column:3}},'44':{start:{line:97,column:2},end:{line:97,column:37}},'45':{start:{line:100,column:0},end:{line:111,column:3}},'46':{start:{line:101,column:13},end:{line:101,column:39}},'47':{start:{line:103,column:2},end:{line:110,column:37}},'48':{start:{line:113,column:0},end:{line:181,column:3}},'49':{start:{line:114,column:14},end:{line:114,column:40}},'50':{start:{line:115,column:14},end:{line:115,column:40}},'51':{start:{line:116,column:14},end:{line:116,column:40}},'52':{start:{line:117,column:14},end:{line:117,column:40}},'53':{start:{line:118,column:14},end:{line:118,column:40}},'54':{start:{line:119,column:14},end:{line:119,column:40}},'55':{start:{line:121,column:15},end:{line:121,column:54}},'56':{start:{line:123,column:2},end:{line:131,column:43}},'57':{start:{line:132,column:2},end:{line:140,column:39}},'58':{start:{line:141,column:2},end:{line:151,column:48}},'59':{start:{line:152,column:2},end:{line:160,column:42}},'60':{start:{line:161,column:2},end:{line:169,column:38}},'61':{start:{line:170,column:2},end:{line:178,column:47}},'62':{start:{line:180,column:2},end:{line:180,column:62}},'63':{start:{line:183,column:0},end:{line:219,column:3}},'64':{start:{line:184,column:14},end:{line:184,column:40}},'65':{start:{line:185,column:14},end:{line:185,column:40}},'66':{start:{line:186,column:15},end:{line:186,column:41}},'67':{start:{line:188,column:15},end:{line:188,column:52}},'68':{start:{line:190,column:2},end:{line:198,column:43}},'69':{start:{line:199,column:2},end:{line:207,column:39}},'70':{start:{line:208,column:2},end:{line:216,column:53}},'71':{start:{line:218,column:2},end:{line:218,column:89}},'72':{start:{line:221,column:0},end:{line:257,column:3}},'73':{start:{line:222,column:15},end:{line:222,column:41}},'74':{start:{line:223,column:15},end:{line:223,column:41}},'75':{start:{line:224,column:15},end:{line:224,column:41}},'76':{start:{line:226,column:15},end:{line:226,column:62}},'77':{start:{line:228,column:2},end:{line:236,column:43}},'78':{start:{line:237,column:2},end:{line:245,column:39}},'79':{start:{line:246,column:2},end:{line:254,column:57}},'80':{start:{line:256,column:2},end:{line:256,column:99}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:4,column:27},end:{line:4,column:28}},loc:{start:{line:4,column:39},end:{line:4,column:484}},line:4},'1':{name:'PowerAssertRecorder',decl:{start:{line:4,column:50},end:{line:4,column:69}},loc:{start:{line:4,column:72},end:{line:4,column:95}},line:4},'2':{name:'_capt',decl:{start:{line:4,column:143},end:{line:4,column:148}},loc:{start:{line:4,column:164},end:{line:4,column:235}},line:4},'3':{name:'_expr',decl:{start:{line:4,column:284},end:{line:4,column:289}},loc:{start:{line:4,column:305},end:{line:4,column:453}},line:4},'4':{name:'(anonymous_4)',decl:{start:{line:14,column:9},end:{line:14,column:10}},loc:{start:{line:14,column:21},end:{line:14,column:23}},line:14},'5':{name:'(anonymous_5)',decl:{start:{line:66,column:16},end:{line:66,column:17}},loc:{start:{line:66,column:28},end:{line:94,column:1}},line:66},'6':{name:'(anonymous_6)',decl:{start:{line:90,column:22},end:{line:90,column:23}},loc:{start:{line:90,column:28},end:{line:90,column:37}},line:90},'7':{name:'(anonymous_7)',decl:{start:{line:91,column:23},end:{line:91,column:24}},loc:{start:{line:91,column:29},end:{line:91,column:39}},line:91},'8':{name:'(anonymous_8)',decl:{start:{line:96,column:15},end:{line:96,column:16}},loc:{start:{line:96,column:21},end:{line:98,column:1}},line:96},'9':{name:'(anonymous_9)',decl:{start:{line:100,column:15},end:{line:100,column:16}},loc:{start:{line:100,column:20},end:{line:111,column:1}},line:100},'10':{name:'(anonymous_10)',decl:{start:{line:113,column:29},end:{line:113,column:30}},loc:{start:{line:113,column:40},end:{line:181,column:1}},line:113},'11':{name:'(anonymous_11)',decl:{start:{line:183,column:38},end:{line:183,column:39}},loc:{start:{line:183,column:49},end:{line:219,column:1}},line:183},'12':{name:'(anonymous_12)',decl:{start:{line:221,column:42},end:{line:221,column:43}},loc:{start:{line:221,column:53},end:{line:257,column:1}},line:221}},branchMap:{'0':{loc:{start:{line:97,column:2},end:{line:97,column:36}},type:'binary-expr',locations:[{start:{line:97,column:2},end:{line:97,column:9}},{start:{line:97,column:13},end:{line:97,column:36}}],line:97}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0,'67':0,'68':0,'69':0,'70':0,'71':0,'72':0,'73':0,'74':0,'75':0,'76':0,'77':0,'78':0,'79':0,'80':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var _powerAssertVisitorKeys=(cov_2jpbhrppgb.s[0]++,'{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareOpaqueType":["id","typeParameters","supertype"],"DeclareVariable":["id"],"DeclareExportDeclaration":["declaration","specifiers","source"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"OpaqueType":["id","typeParameters","impltype","supertype"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"ObjectTypeSpreadProperty":["argument"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}'),_powerAssertRecorder=(cov_2jpbhrppgb.s[1]++,function(){cov_2jpbhrppgb.f[0]++;function PowerAssertRecorder(){cov_2jpbhrppgb.f[1]++;cov_2jpbhrppgb.s[2]++;this.captured=[];}cov_2jpbhrppgb.s[3]++;PowerAssertRecorder.prototype._capt=function _capt(value,espath){cov_2jpbhrppgb.f[2]++;cov_2jpbhrppgb.s[4]++;this.captured.push({value:value,espath:espath});cov_2jpbhrppgb.s[5]++;return value;};cov_2jpbhrppgb.s[6]++;PowerAssertRecorder.prototype._expr=function _expr(value,source){cov_2jpbhrppgb.f[3]++;var capturedValues=(cov_2jpbhrppgb.s[7]++,this.captured);cov_2jpbhrppgb.s[8]++;this.captured=[];cov_2jpbhrppgb.s[9]++;return{powerAssertContext:{value:value,events:capturedValues},source:source};};cov_2jpbhrppgb.s[10]++;return PowerAssertRecorder;}());const test=(cov_2jpbhrppgb.s[11]++,require('ava'));const sinon=(cov_2jpbhrppgb.s[12]++,require('sinon'));const proxyquire=(cov_2jpbhrppgb.s[13]++,require('proxyquire'));const metricFixtures=(cov_2jpbhrppgb.s[14]++,require('./fixtures/metric'));const agentFixtures=(cov_2jpbhrppgb.s[15]++,require('./fixtures/agent'));let config=(cov_2jpbhrppgb.s[16]++,{login:function(){cov_2jpbhrppgb.f[4]++;}});let AgentStub=(cov_2jpbhrppgb.s[17]++,{hasMany:sinon.spy()});let uuid=(cov_2jpbhrppgb.s[18]++,'yyy-yyy-yyy');let type=(cov_2jpbhrppgb.s[19]++,'ram');let sandbox=(cov_2jpbhrppgb.s[20]++,null);let MetricStub=(cov_2jpbhrppgb.s[21]++,null);let db=(cov_2jpbhrppgb.s[22]++,null);let uuidArgs=(cov_2jpbhrppgb.s[23]++,{where:{uuid}});let newMetric=(cov_2jpbhrppgb.s[24]++,{id:1,type:'ram',value:'1064',createAt:new Date()});let agentUuidArgs=(cov_2jpbhrppgb.s[25]++,{attributes:['type'],group:['type'],include:[{attributes:[],model:AgentStub,where:{uuid}}],raw:true});let typeAgentUuidArgs=(cov_2jpbhrppgb.s[26]++,{attributes:['id','type','value','createdAt'],where:{type},limit:20,order:[['createdAt','DESC']],include:[{attributes:[],model:AgentStub,where:{uuid}}],raw:true});cov_2jpbhrppgb.s[27]++;test.beforeEach(async()=>{cov_2jpbhrppgb.f[5]++;cov_2jpbhrppgb.s[28]++;sandbox=sinon.sandbox.create();cov_2jpbhrppgb.s[29]++;MetricStub={belongsTo:sandbox.spy()// Model findOne Stub
};cov_2jpbhrppgb.s[30]++;AgentStub.findOne=sandbox.stub();cov_2jpbhrppgb.s[31]++;AgentStub.findOne.withArgs(uuidArgs).returns(Promise.resolve(agentFixtures.byUuid(uuid)));// Model create stub
cov_2jpbhrppgb.s[32]++;MetricStub.create=sandbox.stub();cov_2jpbhrppgb.s[33]++;MetricStub.create.withArgs(newMetric).returns(Promise.resolve({toJSON(){cov_2jpbhrppgb.s[34]++;return newMetric;}}));// Model findAll stub
cov_2jpbhrppgb.s[35]++;MetricStub.findAll=sandbox.stub();cov_2jpbhrppgb.s[36]++;MetricStub.findAll.withArgs().returns(Promise.resolve(metricFixtures.all));cov_2jpbhrppgb.s[37]++;MetricStub.findAll.withArgs(agentUuidArgs).returns(Promise.resolve(metricFixtures.findByAgentUuid(uuid)));cov_2jpbhrppgb.s[38]++;MetricStub.findAll.withArgs(typeAgentUuidArgs).returns(Promise.resolve(metricFixtures.findByTypeAgentUuid(type,uuid)));const setupDatabase=(cov_2jpbhrppgb.s[39]++,proxyquire('../',{'./models/agent':()=>{cov_2jpbhrppgb.f[6]++;cov_2jpbhrppgb.s[40]++;return AgentStub;},'./models/metric':()=>{cov_2jpbhrppgb.f[7]++;cov_2jpbhrppgb.s[41]++;return MetricStub;}}));cov_2jpbhrppgb.s[42]++;db=await setupDatabase(config);});cov_2jpbhrppgb.s[43]++;test.afterEach(()=>{cov_2jpbhrppgb.f[8]++;cov_2jpbhrppgb.s[44]++;(cov_2jpbhrppgb.b[0][0]++,sandbox)&&(cov_2jpbhrppgb.b[0][1]++,sinon.sandbox.restore());});cov_2jpbhrppgb.s[45]++;test('Metric',t=>{cov_2jpbhrppgb.f[9]++;var _rec=(cov_2jpbhrppgb.s[46]++,new _powerAssertRecorder());cov_2jpbhrppgb.s[47]++;t.truthy(_rec._expr(_rec._capt(_rec._capt(db,'arguments/0/object').Metric,'arguments/0'),{content:'t.truthy(db.Metric, \'Metric service should exist\')',filepath:'tests\\metric-tests.js',line:97,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"truthy","range":[2,8]},"computed":false,"range":[0,8]},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"db","range":[9,11]},"property":{"type":"Identifier","name":"Metric","range":[12,18]},"computed":false,"range":[9,18]},{"type":"StringLiteral","value":"Metric service should exist","range":[20,49]}],"range":[0,50]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"truthy","range":[2,8]},{"type":{"label":"("},"range":[8,9]},{"type":{"label":"name"},"value":"db","range":[9,11]},{"type":{"label":"."},"range":[11,12]},{"type":{"label":"name"},"value":"Metric","range":[12,18]},{"type":{"label":","},"range":[18,19]},{"type":{"label":"string"},"value":"Metric service should exist","range":[20,49]},{"type":{"label":")"},"range":[49,50]}]',visitorKeys:_powerAssertVisitorKeys}),'Metric service should exist');});cov_2jpbhrppgb.s[48]++;test.serial('Metric#create',async t=>{cov_2jpbhrppgb.f[10]++;var _rec2=(cov_2jpbhrppgb.s[49]++,new _powerAssertRecorder()),_rec3=(cov_2jpbhrppgb.s[50]++,new _powerAssertRecorder()),_rec4=(cov_2jpbhrppgb.s[51]++,new _powerAssertRecorder()),_rec5=(cov_2jpbhrppgb.s[52]++,new _powerAssertRecorder()),_rec6=(cov_2jpbhrppgb.s[53]++,new _powerAssertRecorder()),_rec7=(cov_2jpbhrppgb.s[54]++,new _powerAssertRecorder());let metric=(cov_2jpbhrppgb.s[55]++,await db.Metric.create(uuid,newMetric));cov_2jpbhrppgb.s[56]++;t.true(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(AgentStub,'arguments/0/object/object').findOne,'arguments/0/object').called,'arguments/0'),{content:'t.true(AgentStub.findOne.called, \'findOne should be called on model\')',filepath:'tests\\metric-tests.js',line:103,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findOne","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"called","range":[25,31]},"computed":false,"range":[7,31]},{"type":"StringLiteral","value":"findOne should be called on model","range":[33,68]}],"range":[0,69]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findOne","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"called","range":[25,31]},{"type":{"label":","},"range":[31,32]},{"type":{"label":"string"},"value":"findOne should be called on model","range":[33,68]},{"type":{"label":")"},"range":[68,69]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called on model');cov_2jpbhrppgb.s[57]++;t.true(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(AgentStub,'arguments/0/object/object').findOne,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(AgentStub.findOne.calledOnce, \'findOne should be called once\')',filepath:'tests\\metric-tests.js',line:104,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findOne","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledOnce","range":[25,35]},"computed":false,"range":[7,35]},{"type":"StringLiteral","value":"findOne should be called once","range":[37,68]}],"range":[0,69]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findOne","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledOnce","range":[25,35]},{"type":{"label":","},"range":[35,36]},{"type":{"label":"string"},"value":"findOne should be called once","range":[37,68]},{"type":{"label":")"},"range":[68,69]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called once');cov_2jpbhrppgb.s[58]++;t.true(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(AgentStub,'arguments/0/callee/object/object').findOne,'arguments/0/callee/object').calledWith(_rec4._capt({where:_rec4._capt({uuid},'arguments/0/arguments/0/properties/0/value')},'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(AgentStub.findOne.calledWith({ where: { uuid } }), \'findOne should be called with uuidArgs\')',filepath:'tests\\metric-tests.js',line:105,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"findOne","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledWith","range":[25,35]},"computed":false,"range":[7,35]},"arguments":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"where","range":[38,43]},"value":{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"Identifier","name":"uuid","range":[47,51]},"value":{"type":"Identifier","name":"uuid","range":[47,51]},"computed":false,"shorthand":true,"range":[47,51]}],"range":[45,53]},"computed":false,"shorthand":false,"range":[38,53]}],"range":[36,55]}],"range":[7,56]},{"type":"StringLiteral","value":"findOne should be called with uuidArgs","range":[58,98]}],"range":[0,99]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"findOne","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledWith","range":[25,35]},{"type":{"label":"("},"range":[35,36]},{"type":{"label":"{"},"range":[36,37]},{"type":{"label":"name"},"value":"where","range":[38,43]},{"type":{"label":":"},"range":[43,44]},{"type":{"label":"{"},"range":[45,46]},{"type":{"label":"name"},"value":"uuid","range":[47,51]},{"type":{"label":"}"},"range":[52,53]},{"type":{"label":"}"},"range":[54,55]},{"type":{"label":")"},"range":[55,56]},{"type":{"label":","},"range":[56,57]},{"type":{"label":"string"},"value":"findOne should be called with uuidArgs","range":[58,98]},{"type":{"label":")"},"range":[98,99]}]',visitorKeys:_powerAssertVisitorKeys}),'findOne should be called with uuidArgs');cov_2jpbhrppgb.s[59]++;t.true(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(MetricStub,'arguments/0/object/object').create,'arguments/0/object').called,'arguments/0'),{content:'t.true(MetricStub.create.called, \'create should be called on model\')',filepath:'tests\\metric-tests.js',line:108,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"create","range":[18,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"called","range":[25,31]},"computed":false,"range":[7,31]},{"type":"StringLiteral","value":"create should be called on model","range":[33,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"create","range":[18,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"called","range":[25,31]},{"type":{"label":","},"range":[31,32]},{"type":{"label":"string"},"value":"create should be called on model","range":[33,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'create should be called on model');cov_2jpbhrppgb.s[60]++;t.true(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(MetricStub,'arguments/0/object/object').create,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(MetricStub.create.calledOnce, \'create should be called once\')',filepath:'tests\\metric-tests.js',line:109,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"create","range":[18,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledOnce","range":[25,35]},"computed":false,"range":[7,35]},{"type":"StringLiteral","value":"create should be called once","range":[37,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"create","range":[18,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledOnce","range":[25,35]},{"type":{"label":","},"range":[35,36]},{"type":{"label":"string"},"value":"create should be called once","range":[37,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'create should be called once');cov_2jpbhrppgb.s[61]++;t.true(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(MetricStub,'arguments/0/callee/object/object').create,'arguments/0/callee/object').calledWith(_rec7._capt(newMetric,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(MetricStub.create.calledWith(newMetric), \'create should be called with newAgent\')',filepath:'tests\\metric-tests.js',line:110,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"create","range":[18,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledWith","range":[25,35]},"computed":false,"range":[7,35]},"arguments":[{"type":"Identifier","name":"newMetric","range":[36,45]}],"range":[7,46]},{"type":"StringLiteral","value":"create should be called with newAgent","range":[48,87]}],"range":[0,88]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"create","range":[18,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledWith","range":[25,35]},{"type":{"label":"("},"range":[35,36]},{"type":{"label":"name"},"value":"newMetric","range":[36,45]},{"type":{"label":")"},"range":[45,46]},{"type":{"label":","},"range":[46,47]},{"type":{"label":"string"},"value":"create should be called with newAgent","range":[48,87]},{"type":{"label":")"},"range":[87,88]}]',visitorKeys:_powerAssertVisitorKeys}),'create should be called with newAgent');cov_2jpbhrppgb.s[62]++;t.deepEqual(metric,newMetric,'metric should be the same');});cov_2jpbhrppgb.s[63]++;test.serial('Metric#findByAgentUuid',async t=>{cov_2jpbhrppgb.f[11]++;var _rec8=(cov_2jpbhrppgb.s[64]++,new _powerAssertRecorder()),_rec9=(cov_2jpbhrppgb.s[65]++,new _powerAssertRecorder()),_rec10=(cov_2jpbhrppgb.s[66]++,new _powerAssertRecorder());let metric=(cov_2jpbhrppgb.s[67]++,await db.Metric.findByAgentUuid(uuid));cov_2jpbhrppgb.s[68]++;t.true(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(MetricStub,'arguments/0/object/object').findAll,'arguments/0/object').called,'arguments/0'),{content:'t.true(MetricStub.findAll.called, \'findAll should be called on model\')',filepath:'tests\\metric-tests.js',line:118,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"findAll","range":[18,25]},"computed":false,"range":[7,25]},"property":{"type":"Identifier","name":"called","range":[26,32]},"computed":false,"range":[7,32]},{"type":"StringLiteral","value":"findAll should be called on model","range":[34,69]}],"range":[0,70]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"findAll","range":[18,25]},{"type":{"label":"."},"range":[25,26]},{"type":{"label":"name"},"value":"called","range":[26,32]},{"type":{"label":","},"range":[32,33]},{"type":{"label":"string"},"value":"findAll should be called on model","range":[34,69]},{"type":{"label":")"},"range":[69,70]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called on model');cov_2jpbhrppgb.s[69]++;t.true(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(MetricStub,'arguments/0/object/object').findAll,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(MetricStub.findAll.calledOnce, \'findAll should be called once\')',filepath:'tests\\metric-tests.js',line:119,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"findAll","range":[18,25]},"computed":false,"range":[7,25]},"property":{"type":"Identifier","name":"calledOnce","range":[26,36]},"computed":false,"range":[7,36]},{"type":"StringLiteral","value":"findAll should be called once","range":[38,69]}],"range":[0,70]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"findAll","range":[18,25]},{"type":{"label":"."},"range":[25,26]},{"type":{"label":"name"},"value":"calledOnce","range":[26,36]},{"type":{"label":","},"range":[36,37]},{"type":{"label":"string"},"value":"findAll should be called once","range":[38,69]},{"type":{"label":")"},"range":[69,70]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called once');cov_2jpbhrppgb.s[70]++;t.true(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(MetricStub,'arguments/0/callee/object/object').findAll,'arguments/0/callee/object').calledWith(_rec10._capt(agentUuidArgs,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(MetricStub.findAll.calledWith(agentUuidArgs), \'findAll should be called with agentUuidArgs\')',filepath:'tests\\metric-tests.js',line:120,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"findAll","range":[18,25]},"computed":false,"range":[7,25]},"property":{"type":"Identifier","name":"calledWith","range":[26,36]},"computed":false,"range":[7,36]},"arguments":[{"type":"Identifier","name":"agentUuidArgs","range":[37,50]}],"range":[7,51]},{"type":"StringLiteral","value":"findAll should be called with agentUuidArgs","range":[53,98]}],"range":[0,99]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"findAll","range":[18,25]},{"type":{"label":"."},"range":[25,26]},{"type":{"label":"name"},"value":"calledWith","range":[26,36]},{"type":{"label":"("},"range":[36,37]},{"type":{"label":"name"},"value":"agentUuidArgs","range":[37,50]},{"type":{"label":")"},"range":[50,51]},{"type":{"label":","},"range":[51,52]},{"type":{"label":"string"},"value":"findAll should be called with agentUuidArgs","range":[53,98]},{"type":{"label":")"},"range":[98,99]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called with agentUuidArgs');cov_2jpbhrppgb.s[71]++;t.deepEqual(metric,metricFixtures.findByAgentUuid(uuid),'metric should be the same');});cov_2jpbhrppgb.s[72]++;test.serial('Metric#findByTypeAgentUuid',async t=>{cov_2jpbhrppgb.f[12]++;var _rec11=(cov_2jpbhrppgb.s[73]++,new _powerAssertRecorder()),_rec12=(cov_2jpbhrppgb.s[74]++,new _powerAssertRecorder()),_rec13=(cov_2jpbhrppgb.s[75]++,new _powerAssertRecorder());let metric=(cov_2jpbhrppgb.s[76]++,await db.Metric.findByTypeAgentUuid(type,uuid));cov_2jpbhrppgb.s[77]++;t.true(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(MetricStub,'arguments/0/object/object').findAll,'arguments/0/object').called,'arguments/0'),{content:'t.true(MetricStub.findAll.called, \'findAll should be called on model\')',filepath:'tests\\metric-tests.js',line:128,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"findAll","range":[18,25]},"computed":false,"range":[7,25]},"property":{"type":"Identifier","name":"called","range":[26,32]},"computed":false,"range":[7,32]},{"type":"StringLiteral","value":"findAll should be called on model","range":[34,69]}],"range":[0,70]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"findAll","range":[18,25]},{"type":{"label":"."},"range":[25,26]},{"type":{"label":"name"},"value":"called","range":[26,32]},{"type":{"label":","},"range":[32,33]},{"type":{"label":"string"},"value":"findAll should be called on model","range":[34,69]},{"type":{"label":")"},"range":[69,70]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called on model');cov_2jpbhrppgb.s[78]++;t.true(_rec12._expr(_rec12._capt(_rec12._capt(_rec12._capt(MetricStub,'arguments/0/object/object').findAll,'arguments/0/object').calledOnce,'arguments/0'),{content:'t.true(MetricStub.findAll.calledOnce, \'findAll should be called once\')',filepath:'tests\\metric-tests.js',line:129,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"findAll","range":[18,25]},"computed":false,"range":[7,25]},"property":{"type":"Identifier","name":"calledOnce","range":[26,36]},"computed":false,"range":[7,36]},{"type":"StringLiteral","value":"findAll should be called once","range":[38,69]}],"range":[0,70]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"findAll","range":[18,25]},{"type":{"label":"."},"range":[25,26]},{"type":{"label":"name"},"value":"calledOnce","range":[26,36]},{"type":{"label":","},"range":[36,37]},{"type":{"label":"string"},"value":"findAll should be called once","range":[38,69]},{"type":{"label":")"},"range":[69,70]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called once');cov_2jpbhrppgb.s[79]++;t.true(_rec13._expr(_rec13._capt(_rec13._capt(_rec13._capt(MetricStub,'arguments/0/callee/object/object').findAll,'arguments/0/callee/object').calledWith(_rec13._capt(typeAgentUuidArgs,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(MetricStub.findAll.calledWith(typeAgentUuidArgs), \'findAll should be called with typeAgentUuidArgs\')',filepath:'tests\\metric-tests.js',line:130,async:true,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"findAll","range":[18,25]},"computed":false,"range":[7,25]},"property":{"type":"Identifier","name":"calledWith","range":[26,36]},"computed":false,"range":[7,36]},"arguments":[{"type":"Identifier","name":"typeAgentUuidArgs","range":[37,54]}],"range":[7,55]},{"type":"StringLiteral","value":"findAll should be called with typeAgentUuidArgs","range":[57,106]}],"range":[0,107]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"findAll","range":[18,25]},{"type":{"label":"."},"range":[25,26]},{"type":{"label":"name"},"value":"calledWith","range":[26,36]},{"type":{"label":"("},"range":[36,37]},{"type":{"label":"name"},"value":"typeAgentUuidArgs","range":[37,54]},{"type":{"label":")"},"range":[54,55]},{"type":{"label":","},"range":[55,56]},{"type":{"label":"string"},"value":"findAll should be called with typeAgentUuidArgs","range":[57,106]},{"type":{"label":")"},"range":[106,107]}]',visitorKeys:_powerAssertVisitorKeys}),'findAll should be called with typeAgentUuidArgs');cov_2jpbhrppgb.s[80]++;t.deepEqual(metric,metricFixtures.findByTypeAgentUuid(type,uuid),'metric should be the same');});//# sourceMappingURL=..\node_modules\.cache\ava\33b45fc7afe7d2ac6cfb7c7e1a1d9a61.js.map